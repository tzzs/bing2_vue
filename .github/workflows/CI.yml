# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      # Runs a single command using the runners shell
      - name: npm install
        run: |
          npm install

      # Runs a set of commands using the runners shell
      - name: Project build
        run: |
          npm run build

      - name: Configure SSH
        run: |
          # eval $(ssh-agent -s)
          # bash -c 'ssh-add <(echo "${KEY}")'
          mkdir -p ~/.ssh 
          echo "${KEY}" > ~/.ssh/deploy.key
          chmod 600 ~/.ssh/deploy.key
          cat >> ~/.ssh/config <<END
          Host server
            HostName $IP
            User $USERNAME
            IdentityFile ~/.ssh/deploy.key
            StrictHostKeyChecking no
          END
        env:
          IP: ${{secrets.SERVER_IP}}
          USERNAME: ${{secrets.SERVER_USERNAME}}
          KEY: ${{secrets.SERVER_PRIVATE_KEY}}

      - name: Deploy to Server
        run: |
          echo "Deploy to Server"
          # ls
          echo "Clean old bing2_vue"
          ssh server "echo test" 
          ssh serve < deploy.sh > /dev/null 2>&1
          echo "Start copy dist to server"
          scp -o StrictHostKeyChecking=no -r dist/* server:/webdata/bing2_vue
        env:
          IP: ${{secrets.SERVER_IP}}
          USERNAME: ${{secrets.SERVER_USERNAME}}
